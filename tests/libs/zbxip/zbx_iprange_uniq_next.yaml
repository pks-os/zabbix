---
test case: "1. ipV4 range"
in:
  num: 2
  first_range: "21.168.1.1-5"
  second_range: "1-5.168.1.6"
out:
  return: SUCCEED
  ip:
  - '21.168.1.1'
  - '21.168.1.2'
  - '21.168.1.3'
  - '21.168.1.4'
  - '21.168.1.5'
  - '1.168.1.6'
  - '2.168.1.6'
  - '3.168.1.6'
  - '4.168.1.6'
  - '5.168.1.6'
---
test case: "2. ipV6 range - one range structure"
in:
  num: 1
  first_range: "2001:0db8:85a3:0000:0000:8a2e:0370:7334-7339"
  second_range: ""
out:
  return: SUCCEED
  ip:
  - '2001:db8:85a3:0:0:8a2e:370:7334'
  - '2001:db8:85a3:0:0:8a2e:370:7335'
  - '2001:db8:85a3:0:0:8a2e:370:7336'
  - '2001:db8:85a3:0:0:8a2e:370:7337'
  - '2001:db8:85a3:0:0:8a2e:370:7338'
  - '2001:db8:85a3:0:0:8a2e:370:7339'
---
test case: "3. ipV6 range - one range structure with zero compression"
in:
  num: 1
  first_range: "2001:db8:85a3::8a2e:370:7334-7339"
  second_range: ""
out:
  return: SUCCEED
  ip:
  - '2001:db8:85a3:0:0:8a2e:370:7334'
  - '2001:db8:85a3:0:0:8a2e:370:7335'
  - '2001:db8:85a3:0:0:8a2e:370:7336'
  - '2001:db8:85a3:0:0:8a2e:370:7337'
  - '2001:db8:85a3:0:0:8a2e:370:7338'
  - '2001:db8:85a3:0:0:8a2e:370:7339'
---
test case: "4. ipV4 range - subnet mask"
in:
  num: 1
  first_range: "192.168.1.8/29"
  second_range: ""
out:
  return: SUCCEED
  ip:
  - '192.168.1.9'
  - '192.168.1.10'
  - '192.168.1.11'
  - '192.168.1.12'
  - '192.168.1.13'
  - '192.168.1.14'
---
test case: "5. ipV6 range - subnet mask"
in:
  num: 1
  first_range: "2001:0db8:1234:5678::/125"
  second_range: ""
out:
  return: SUCCEED
  ip:
  - '2001:db8:1234:5678:0:0:0:0'
  - '2001:db8:1234:5678:0:0:0:1'
  - '2001:db8:1234:5678:0:0:0:2'
  - '2001:db8:1234:5678:0:0:0:3'
  - '2001:db8:1234:5678:0:0:0:4'
  - '2001:db8:1234:5678:0:0:0:5'
  - '2001:db8:1234:5678:0:0:0:6'
  - '2001:db8:1234:5678:0:0:0:7'
---
test case: "6. Two range groups ipV4 and ipV6"
in:
  num: 2
  first_range: "1.1.1.1-2"
  second_range: "1:1:1:1:1:1:1:1-2"
out:
  return: FAIL
  ip:
  - '1.1.1.1'
  - '1.1.1.2'
  - '1:1:1:1:1:1:1:1'
  - '1:1:1:1:1:1:1:2'
---
test case: "7. Two ranges min max ipv4"
in:
  num: 2
  first_range: "0.0.0.1-2"
  second_range: "255.255.255.253-255"
out:
  return: SUCCEED
  ip:
  - '0.0.0.1'
  - '0.0.0.2'
  - '255.255.255.253'
  - '255.255.255.254'
  - '255.255.255.255'
---
test case: "8. Two ranges min max ipv6"
in:
  num: 2
  first_range: "0:0:0:0:0:0:0:1-2"
  second_range: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:fffe-ffff"
out:
  return: SUCCEED
  ip:
  - '0:0:0:0:0:0:0:1'
  - '0:0:0:0:0:0:0:2'
  - 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:fffe'
  - 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff'
...
